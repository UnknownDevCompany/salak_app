package com.bambuco.salak.model;
// Generated 29/05/2016 09:49:36 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name = "role", schema = "public")
public class Role implements java.io.Serializable {

	private int idRole;
	private String name;
	private boolean state;
	private String description;
	private RoleOption roleOption;
	private Set<User> users = new HashSet<User>(0);

	public Role() {
	}

	public Role(int idRole, String name, boolean state) {
		this.idRole = idRole;
		this.name = name;
		this.state = state;
	}

	public Role(int idRole, String name, boolean state, String description, RoleOption roleOption, Set<User> users) {
		this.idRole = idRole;
		this.name = name;
		this.state = state;
		this.description = description;
		this.roleOption = roleOption;
		this.users = users;
	}

	@Id

	@Column(name = "id_role", unique = true, nullable = false)
	public int getIdRole() {
		return this.idRole;
	}

	public void setIdRole(int idRole) {
		this.idRole = idRole;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "state", nullable = false)
	public boolean isState() {
		return this.state;
	}

	public void setState(boolean state) {
		this.state = state;
	}

	@Column(name = "description", length = 200)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "role")
	public RoleOption getRoleOption() {
		return this.roleOption;
	}

	public void setRoleOption(RoleOption roleOption) {
		this.roleOption = roleOption;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "role")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

}
